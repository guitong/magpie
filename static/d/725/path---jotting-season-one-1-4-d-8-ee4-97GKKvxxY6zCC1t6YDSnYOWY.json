{"data":{"site":{"siteMetadata":{"title":"Magpie","author":"Guitong"}},"markdownRemark":{"id":"a1434809-fd53-5a0f-9041-49d4b7d24b8c","excerpt":"1. 如何写出更好的JS条件语句 ?   https://mp.weixin.qq.com/s/JMwPdQSSTLWPSrLda5Yo5g 5条建议，写出更好的条件语句： 多重判断时使用 Array.includes 更少的嵌套，尽早 return 使用默认参数和解构 倾向于遍历对象而不是 Switch…","html":"<h2>1. 如何写出更好的JS条件语句 ?</h2>\n<blockquote>\n<p> <a href=\"https://mp.weixin.qq.com/s/JMwPdQSSTLWPSrLda5Yo5g\">https://mp.weixin.qq.com/s/JMwPdQSSTLWPSrLda5Yo5g</a></p>\n</blockquote>\n<p>5条建议，写出更好的条件语句：</p>\n<ol>\n<li>多重判断时使用 Array.includes</li>\n<li>更少的嵌套，尽早 return</li>\n<li>使用默认参数和解构</li>\n<li>倾向于遍历对象而不是 Switch 语句</li>\n<li>对 所有/部分 判断使用 Array.every &#x26; Array.some</li>\n</ol>\n<p>对第四点，举个例子，根据颜色打印水果:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">test</span><span class=\"token punctuation\">(</span>color<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// 使用条件语句来寻找对应颜色的水果</span>\n  <span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>color<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">case</span> <span class=\"token string\">'red'</span><span class=\"token punctuation\">:</span>\n      <span class=\"token keyword\">return</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'apple'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'strawberry'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">case</span> <span class=\"token string\">'yellow'</span><span class=\"token punctuation\">:</span>\n      <span class=\"token keyword\">return</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'banana'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'pineapple'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">case</span> <span class=\"token string\">'purple'</span><span class=\"token punctuation\">:</span>\n      <span class=\"token keyword\">return</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'grape'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'plum'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">default</span><span class=\"token punctuation\">:</span>\n      <span class=\"token keyword\">return</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// test results</span>\n<span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// []</span>\n<span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token string\">'yellow'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// ['banana', 'pineapple']</span></code></pre></div>\n<p>可以这样写：</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> fruitColor <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  red<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'apple'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'strawberry'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  yellow<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'banana'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'pineapple'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  purple<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'grape'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'plum'</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">test</span><span class=\"token punctuation\">(</span>color<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> fruitColor<span class=\"token punctuation\">[</span>color<span class=\"token punctuation\">]</span> <span class=\"token operator\">||</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>或者使用 <code class=\"language-text\">Map</code> 实现：</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> fruitColor <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token keyword\">set</span><span class=\"token punctuation\">(</span><span class=\"token string\">'red'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'apple'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'strawberry'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token keyword\">set</span><span class=\"token punctuation\">(</span><span class=\"token string\">'yellow'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'banana'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'pineapple'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token keyword\">set</span><span class=\"token punctuation\">(</span><span class=\"token string\">'purple'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'grape'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'plum'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">test</span><span class=\"token punctuation\">(</span>color<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> fruitColor<span class=\"token punctuation\">.</span><span class=\"token keyword\">get</span><span class=\"token punctuation\">(</span>color<span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2>2. 如何用gatsby搭建博客并部署到Github?</h2>\n<ul>\n<li>\n<p>直接使用模版  <a href=\"https://github.com/gatsbyjs/gatsby-starter-blog\">https://github.com/gatsbyjs/gatsby-starter-blog</a> </p>\n</li>\n<li>\n<p>发布</p>\n</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\">$ npm i gh-pages --save-dev\n\n//然后在package.json的scripts中加上\n&quot;scripts&quot;:{\n  ...,\n  &quot;deploy&quot;: &quot;gatsby build --prefix-paths &amp;&amp; gh-pages -d public&quot;\n}</code></pre></div>\n<ol start=\"3\">\n<li>在gatsby.config.js中设置的你项目地址，</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">module<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  pathPrefix<span class=\"token punctuation\">:</span> <span class=\"token template-string\"><span class=\"token string\">`/project-name`</span></span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<ol start=\"4\">\n<li><code class=\"language-text\">git remote -v</code> 检查是否项目有链接到你线上地址中，如果没有的话，\n首先 <code class=\"language-text\">git init</code>，然后</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre class=\"language-sh\"><code class=\"language-sh\">git remote add origin git@github.com:username/project-name.git</code></pre></div>\n<p>最后运行 <code class=\"language-text\">npm run deploy</code> 即可。等几分钟你就能在线上看到你项目啦（如果没有请去项目地址查看，可能在另一分支上面，只是你需要合并一下就可以啦！）</p>\n<h2>ES6 Symbol</h2>\n<blockquote>\n<p><a href=\"http://es6.ruanyifeng.com/#docs/symbol\">ECMAScript 6 入门 #Symbol By 阮一峰</a></p>\n</blockquote>\n<p>引入原因：保证对象的每个属性是惟一的，防止属性名冲突。</p>\n<blockquote>\n<p>Symbol是一种新的原始数据类型，之前的六种是：null, undefined, Boolean, String, Number, Object.</p>\n</blockquote>\n<h3>创建一个Symbol：</h3>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">let</span> s <span class=\"token operator\">=</span> <span class=\"token function\">Symbol</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>Symbol值可以转为 <code class=\"language-text\">字符串</code>，也可以转为 <code class=\"language-text\">布尔值</code>。</p>\n<h3>作为属性名</h3>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">let</span> mySymbol <span class=\"token operator\">=</span> <span class=\"token function\">Symbol</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 第一种写法</span>\n<span class=\"token keyword\">let</span> a <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\na<span class=\"token punctuation\">[</span>mySymbol<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">'Hello!'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 第二种写法</span>\n<span class=\"token keyword\">let</span> a <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token punctuation\">[</span>mySymbol<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'Hello!'</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 第三种写法</span>\n<span class=\"token keyword\">let</span> a <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\nObject<span class=\"token punctuation\">.</span><span class=\"token function\">defineProperty</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> mySymbol<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> value<span class=\"token punctuation\">:</span> <span class=\"token string\">'Hello!'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 以上写法都得到同样结果</span>\na<span class=\"token punctuation\">[</span>mySymbol<span class=\"token punctuation\">]</span> <span class=\"token comment\">// \"Hello!\"</span></code></pre></div>\n<ul>\n<li>不能用点运算符</li>\n<li>Symbol值必须在方括号中</li>\n<li>为公开属性</li>\n</ul>\n<h3>遍历属性名</h3>\n<blockquote>\n<p>Symbol 作为属性名，该属性不会出现在<code class=\"language-text\">for...in</code>、<code class=\"language-text\">for...of</code>循环中，也不会被<code class=\"language-text\">Object.keys()</code>、<code class=\"language-text\">Object.getOwnPropertyNames()</code>、<code class=\"language-text\">JSON.stringify()</code>返回。但是，它也不是私有属性，有一个<code class=\"language-text\">Object.getOwnPropertySymbols</code>方法，可以获取指定对象的所有 Symbol 属性名。</p>\n</blockquote>\n<p><code class=\"language-text\">Object.getOwnPropertySymbols</code> 方法返回一个数组，成员是当前对象的所有用作属性名的 Symbol 值。</p>\n<p>另一个新的 API，<code class=\"language-text\">Reflect.ownKeys</code> 方法可以返回所有类型的键名，包括常规键名和 Symbol 键名。</p>\n<h3>例子: 消除魔术字符串</h3>\n<blockquote>\n<p>魔术字符串指的是，在代码之中多次出现、与代码形成强耦合的某一个具体的字符串或者数值。</p>\n</blockquote>\n<p>常用的消除魔术字符串的方法，就是把它写成一个变量。</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">getArea</span><span class=\"token punctuation\">(</span>shape<span class=\"token punctuation\">,</span> options<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">let</span> area <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>shape<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">case</span> <span class=\"token string\">'Triangle'</span><span class=\"token punctuation\">:</span> <span class=\"token comment\">// 魔术字符串</span>\n      area <span class=\"token operator\">=</span> <span class=\"token number\">.5</span> <span class=\"token operator\">*</span> options<span class=\"token punctuation\">.</span>width <span class=\"token operator\">*</span> options<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">/* ... more code ... */</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">return</span> area<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">getArea</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Triangle'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> width<span class=\"token punctuation\">:</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span> height<span class=\"token punctuation\">:</span> <span class=\"token number\">100</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 魔术字符串</span></code></pre></div>\n<p>改为：</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> shapeType <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  triangle<span class=\"token punctuation\">:</span> <span class=\"token function\">Symbol</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">getArea</span><span class=\"token punctuation\">(</span>shape<span class=\"token punctuation\">,</span> options<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">let</span> area <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>shape<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">case</span> shapeType<span class=\"token punctuation\">.</span>triangle<span class=\"token punctuation\">:</span>\n      area <span class=\"token operator\">=</span> <span class=\"token number\">.5</span> <span class=\"token operator\">*</span> options<span class=\"token punctuation\">.</span>width <span class=\"token operator\">*</span> options<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">return</span> area<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">getArea</span><span class=\"token punctuation\">(</span>shapeType<span class=\"token punctuation\">.</span>triangle<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> width<span class=\"token punctuation\">:</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span> height<span class=\"token punctuation\">:</span> <span class=\"token number\">100</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>","frontmatter":{"title":"杂记 ❥ 一","date":"February 27, 2019"}}},"pageContext":{"slug":"/jotting-season-one-1/","previous":{"fields":{"slug":"/lisp-develop-guide/"},"frontmatter":{"title":"Lisp环境配置指南"}},"next":null}}