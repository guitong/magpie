{"data":{"site":{"siteMetadata":{"title":"Magpie","author":"Dan Geng"}},"markdownRemark":{"id":"0d596dcf-9932-553e-a70f-7895aa1d8227","excerpt":"Short note on what CSS display properties do to table semantics Posted on Sunday, 4 March 2018 by Steve Faulkner CSS…","html":"<blockquote>\n<p><a href=\"https://developer.paciellogroup.com/blog/2018/03/short-note-on-what-css-display-properties-do-to-table-semantics/\"><em>Short note on what CSS display properties do to table semantics</em></a></p>\n<p>Posted on Sunday, 4 March 2018 by Steve Faulkner</p>\n</blockquote>\n<p>CSS的<code class=\"language-text\">display</code>属性非常强大。你可以用它来改变元素的视觉展示以匹配期望的样式，但有时候这样做可能会在浏览器可访问性树（<a href=\"https://developer.paciellogroup.com/blog/2015/01/the-browser-accessibility-tree/\">browser accessibility tree</a>）中产生意想不到的影响，如传达给屏幕阅读软件的元素的语义。通常情况下，屏幕阅读器和其他辅助技术并不能直接访问HTML DOM，他们通过可访问性API（<a href=\"https://www.w3.org/TR/wai-aria-1.1/#dfn-accessibility-api\">Accessibility APIs</a>）获取HTML DOM的部分信息。有时候，一个元素在HTML DOM中和可访问性树中会有不同的表示（represents）。</p>\n<p>如果在可访问性树中的表示并不符合开发人员预期，它可能是开发人员或浏览器的错误（有意或无意的）。但我们可以确定的是，它不是屏幕阅读器的错。</p>\n<p>一个示例</p>\n<p><strong>the good</strong></p>\n<p>具有<a href=\"https://s.codepen.io/stevef/debug/xYBJNd#def\">默认<code class=\"language-text\">display</code>属性的数据表格</a>，其在浏览器可访问性树的表示正确传达了每个元素的语义。</p>\n<img width=\"237\" alt=\"table-no-flex\" src=\"https://user-images.githubusercontent.com/30484000/37455832-034cde46-2879-11e8-959c-97b0ebb52260.png\">\n<p>每个元素在可访问性树中表示为适当的角色，例如：a <code class=\"language-text\">table</code> element has a <code class=\"language-text\">role=table</code>。</p>\n<img width=\"259\" alt=\"table-role\" src=\"https://user-images.githubusercontent.com/30484000/37455895-24b7ba2e-2879-11e8-85b2-33652e398fe5.png\">\n<p><strong>the bad</strong></p>\n<p>当设置table元素的<code class=\"language-text\">display</code>属性为<code class=\"language-text\">block</code>、<code class=\"language-text\">grid</code>或<code class=\"language-text\">flex</code>时，不好的事情发生了。<code class=\"language-text\">table</code>元素将不再表示为<code class=\"language-text\">table</code>（在可访问性树中），表格行元素/语义不以任何形式表示。</p>\n<img width=\"279\" alt=\"block\" src=\"https://user-images.githubusercontent.com/30484000/37455924-37bdd0e0-2879-11e8-959a-7ddf14e60e12.png\">\n<p>在可访问性树中，没有任何元素以数据表格语义表示，它们的角色都分配为<code class=\"language-text\">role=Text frame</code>。</p>\n<img width=\"194\" alt=\"block-role\" src=\"https://user-images.githubusercontent.com/30484000/37455937-3ee91460-2879-11e8-9c17-e1264e8b68d7.png\">\n<p>可以使用ARIA<code class=\"language-text\">table/row/colunmheader/rowheader/cell</code>角色（参见ARIA <a href=\"https://www.w3.org/TR/wai-aria-practices-1.1/#table\">table design pattern</a> ）添加语义来解决这个问题，但这对开发者来说是本不应该需要的繁重工作。 在这种情况下，<a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=1005271\">浏览器不该混淆表格语义</a>。</p>\n<p>If nothing else, a developer should be aware that it is not always the fault of the assistive technology when we can’t have <a href=\"http://kizu.ru/en/blog/variable-order/\">nice things</a>.</p>\n<h2>相关阅读</h2>\n<p><a href=\"http://adrianroselli.com/2018/02/tables-css-display-properties-and-aria.html\">Tables, CSS Display Properties, and ARIA</a></p>\n<p>（完）</p>","frontmatter":{"title":"小记: 关于CSS display 属性对表格语义的影响","date":"May 09, 2018"}}},"pageContext":{"slug":"/what-css-display-properties-do-to-table-semantics/","previous":{"fields":{"slug":"/angular-components-communicate/"},"frontmatter":{"title":"Angualr 组件之间如何通讯？"}},"next":null}}