{"data":{"site":{"siteMetadata":{"title":"Magpie"}},"allMarkdownRemark":{"edges":[{"node":{"excerpt":"安装 SBCL 我采用的Lisp环境为  。首先让我们来安装 SBCL(Steel Bank Common Lisp) ，它是Common Lisp的一种实现，是一个高性能的Common Lisp编译器。 在OS X系统上，我们可以很方便的使用Homebrew…","fields":{"slug":"/lisp-develop-guide/"},"frontmatter":{"date":"September 22, 2018","title":"[Getting Started] - Lisp环境配置指南"}}},{"node":{"excerpt":"Using npm update and npm outdated to update dependencies  By  PANU PITKÄMÄKI 更新一个库的新版本并不容易。Semantic versioning screws things just enough…","fields":{"slug":"/ use-npm-update-and-npm-outdated-to-update-dependencies/"},"frontmatter":{"date":"June 26, 2018","title":"使用npm update 和 npm outdated 更新依赖"}}},{"node":{"excerpt":"Sharing Data Between Angular Components - Four Methods Arp 30, 2017 by Jeff Delaney 在深入您的第一个Anguar…","fields":{"slug":"/sharing-data-between-angular-components/"},"frontmatter":{"date":"May 25, 2018","title":"Angular组件共享数据的四种方法"}}},{"node":{"excerpt":"  How To Use Ampersands To Simplify Your Sass \n Author:  PHILIP ZASTROW （ampersand）是一个神奇的字符。它是一个古老的符号，是来源于拉丁语“Et…","fields":{"slug":"/use-ampersands-to-simplify-your-sass/"},"frontmatter":{"date":"May 19, 2018","title":"如何利用`&`来简化你的Sass"}}},{"node":{"excerpt":"Short note on what CSS display properties do to table semantics Posted on Sunday, 4 March 2018 by Steve Faulkner CSS…","fields":{"slug":"/what-css-display-properties-do-to-table-semantics/"},"frontmatter":{"date":"May 09, 2018","title":"小记: 关于CSS display 属性对表格语义的影响"}}},{"node":{"excerpt":"场景一：通过输入型绑定把数据从父组件传到子组件 使用 装饰器。 例如： 再看下父组件（部分省略）： 效果如下： 场景二：通过setter截听输入属性值的变化 使用输入属性的setter…","fields":{"slug":"/angular-components-communicate/"},"frontmatter":{"date":"April 30, 2018","title":"Angualr 组件之间如何通讯？"}}},{"node":{"excerpt":"一、声明为Flex布局 注意 ： webkit内核浏览器，必须加 前缀。 子元素的 、 、 属性将失效 二、基本概念 参考上图： flex container ／ flex item main axis （main start | main end） cross axis…","fields":{"slug":"/flex-grammar/"},"frontmatter":{"date":"April 22, 2018","title":"Flex 语法总结"}}},{"node":{"excerpt":"目前普遍使用的是 Angular规范 。如下图： Commit Message 格式 提交信息包括三个部分： Header ,   Body  和  Footer 。 其中，Header为必需项。任何一行不得超过72（或100）个字符。 Header Header…","fields":{"slug":"/git-commit-message/"},"frontmatter":{"date":"April 12, 2018","title":"Git Commit Message 编写约定"}}},{"node":{"excerpt":"  原文见：  JavaScript: Optimizing loops…","fields":{"slug":"/optimizing-js-loops/"},"frontmatter":{"date":"March 31, 2018","title":"JavaScript: 优化循环"}}},{"node":{"excerpt":"MDN Fetch API Fetch API 提供了一个用于获取资源的接口（包括跨网络）。如果您使用过 的话将会对此比较熟悉，但是新的API提供了更强大和灵活的功能集。 1. 概念与用法 Fetch…","fields":{"slug":"/fetch-api-guide/"},"frontmatter":{"date":"March 25, 2018","title":"Fetch API 简介"}}},{"node":{"excerpt":"† 参考 Centering in CSS: A Complete Guide BY  CHRIS COYIER  ON SEPTEMBER 2, 2014 附：文中涉及到了flex的一些用法，如果没有接触过flex布局，建议看一下阮一峰老师的这篇指南： Flex…","fields":{"slug":"/centering-in-css/"},"frontmatter":{"date":"March 12, 2018","title":"朝花夕拾 • CSS居中完全指南"}}},{"node":{"excerpt":"有时我们希望文本的内容不要太长，如果超出预期长度的话，则显示省略号标记。这种实现也比较常见。 简而言之，要实现这种效果，需要同时满足以下四个条件： 有宽度限制，即定义一个文本最长宽度 禁止折行。所有的文本只能在一行显示，下面的CSS…","fields":{"slug":"/truncate-string-with-ellipsis/"},"frontmatter":{"date":"March 05, 2018","title":"CSS 实现文字过长显示省略号"}}},{"node":{"excerpt":"问题 Web应用在Chrome里调试时正常，但是在移动端测试时点击后退不会刷新页面数据。 查看了移动端输出信息后，发现确实是接口数据都走了缓存。 我的后退是通过History API…","fields":{"slug":"/browser-forward-backward-and-refresh/"},"frontmatter":{"date":"February 27, 2018","title":"浏览器的前进、后退与刷新"}}},{"node":{"excerpt":"  参考Github官方帮助文档：    syncing-a-fork    configuring-a-remote-for-a-fork 一般情况下，当我们想在Github上为开源项目做贡献时，会首先将项目fork…","fields":{"slug":"/syncing-a-fork/"},"frontmatter":{"date":"February 20, 2018","title":"如何同步一个fork仓库"}}},{"node":{"excerpt":"This is my first post on my new fake blog! How exciting! I’m sure I’ll write a lot more interesting things in the future. Oh, and here’s a…","fields":{"slug":"/hello-world/"},"frontmatter":{"date":"May 01, 2015","title":"Hello World"}}}]}},"pageContext":{}}