{"data":{"site":{"siteMetadata":{"title":"Magpie","author":"Bulldog_dan"}},"markdownRemark":{"id":"8541bfac-3245-5ef0-bedd-c85cc001be77","excerpt":"  How To Use Ampersands To Simplify Your Sass \n Author:  PHILIP ZASTROW （ampersand）是一个神奇的字符。它是一个古老的符号，是来源于拉丁语“Et…","html":"<blockquote>\n<p> <a href=\"https://seesparkbox.com/foundry/how_to_use_ampersands_to_simplifiy_your_sass\"><em>How To Use Ampersands To Simplify Your Sass</em></a>\nAuthor: <a href=\"https://seesparkbox.com/foundry/author/philip_zastrow\">PHILIP ZASTROW</a></p>\n</blockquote>\n<p><code class=\"language-text\">&amp;</code>（ampersand）是一个神奇的字符。它是一个古老的符号，是来源于拉丁语“Et”的一个连字符，可用于连接单词、短语和<code class=\"language-text\">thoughts？</code>。如今，<code class=\"language-text\">&amp;</code>的使用变得更多样化，但是<code class=\"language-text\">&amp;</code>仍然保持了它原始的含义 — <code class=\"language-text\">and</code>, <code class=\"language-text\">as well as</code> 或 <code class=\"language-text\">this too</code>。在Sass中，<code class=\"language-text\">&amp;</code>引用声明块的父选择器，允许其在自己的内部被引用。这意味着，诸如伪类选择器（pseudo selectors）、同胞选择器（sibling selectors）等可以使用该选择器的其他声明来引用和分组。<code class=\"language-text\">&amp;</code>是组织和扩展Sass的强大工具。</p>\n<h2>伪类选择器</h2>\n<p>在我的Sass中，<code class=\"language-text\">&amp;</code>最常见的用途之一是伪类选择器。These include the <code class=\"language-text\">:hover</code>, <code class=\"language-text\">:active</code>, and <code class=\"language-text\">:focus</code> found accompanying selectors like <code class=\"language-text\">&lt;a&gt;</code> and <code class=\"language-text\">&lt;input&gt;</code>.当在Sass中使用<code class=\"language-text\">&amp;</code>时，可以为<code class=\"language-text\">&lt;a&gt;</code>声明单个块。然后在该声明块中，<code class=\"language-text\">&lt;a&gt;</code>可以使用<code class=\"language-text\">&amp;:hover</code>、<code class=\"language-text\">&amp;:active</code>和<code class=\"language-text\">&amp;:focus</code>来引用。看下面的例子：</p>\n<p>Sass</p>\n<div class=\"gatsby-highlight\" data-language=\"scss\"><pre class=\"language-scss\"><code class=\"language-scss\"><span class=\"token selector\">a </span><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> #0090B2<span class=\"token punctuation\">;</span>\n  <span class=\"token selector\"><span class=\"token parent important\">&amp;</span>:hover </span><span class=\"token punctuation\">{</span>\n    <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> #FF7A00<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token selector\"><span class=\"token parent important\">&amp;</span>:active </span><span class=\"token punctuation\">{</span>\n    <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> #B25500<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>CSS</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">a</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> #0090B2<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token selector\">a:hover</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> #FF7A00<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token selector\">a:active</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> #B25500<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><a href=\"http://sassmeister.com/gist/bcce995ec37a765e871f\">See this example on Sassmeister</a></p>\n<p>这些伪类选择器只是开始，还有更多如<code class=\"language-text\">:nth-child</code>、<code class=\"language-text\">:target</code>、<code class=\"language-text\">:checked</code>等等。</p>\n<h2>添加一个Class或者ID</h2>\n<p>由于<code class=\"language-text\">&amp;</code>引用最顶端选择器，我们可以使用额外的类和/或id（就像伪类选择器一样）去扩展功能。让我们假设现在有一个<code class=\"language-text\">.feature-class</code>选择器，它有另外一个实例匹配选择器<code class=\"language-text\">.style-class</code>，添加这个类将会改变它的外观。在<code class=\"language-text\">.feature-class</code>声明块中，我们将声明一个以<code class=\"language-text\">&amp;.style-class</code>开头的子块。Sass将使用<code class=\"language-text\">.feature-class</code>替代<code class=\"language-text\">&amp;</code>，在生成的CSS中变成了<code class=\"language-text\">.feature-class.style-class</code>。让我们更新上面的例子，并将元素选择器<code class=\"language-text\">&lt;a&gt;</code>替换为类选择器<code class=\"language-text\">.feature-class</code>。</p>\n<p>Sass</p>\n<div class=\"gatsby-highlight\" data-language=\"scss\"><pre class=\"language-scss\"><code class=\"language-scss\"><span class=\"token selector\">.feature-class </span><span class=\"token punctuation\">{</span>\n    <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> #0090b2<span class=\"token punctuation\">;</span>\n    <span class=\"token selector\"><span class=\"token parent important\">&amp;</span>:hover </span><span class=\"token punctuation\">{</span>\n        <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> #FF7A00<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token selector\"><span class=\"token parent important\">&amp;</span>:active </span><span class=\"token punctuation\">{</span>\n        <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> #B25500<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token selector\"><span class=\"token parent important\">&amp;</span>.style-class </span><span class=\"token punctuation\">{</span>\n        <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> #00CEFF<span class=\"token punctuation\">;</span>\n        <span class=\"token selector\"><span class=\"token parent important\">&amp;</span>:hover </span><span class=\"token punctuation\">{</span>\n            <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> #0090b2<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token selector\"><span class=\"token parent important\">&amp;</span>:active </span><span class=\"token punctuation\">{</span>\n            <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> #FF7A00<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>CSS</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">.feature-class</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> #0090B2<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token selector\">.feature-class:hover</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> #FF7A00<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token selector\">.feature-class:active</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> #B25500<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token selector\">.feature-class.style-class</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> #00CEFF<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token selector\">.feature-class.style-class:hover</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> #0090B2<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token selector\">.feature-class.style-class:active</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> #FF7A00<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><a href=\"http://sassmeister.com/gist/38e118ac945979d59d62\">See this example on Sassmeister.</a></p>\n<p>注意到，<code class=\"language-text\">&amp;.style-class</code>声明块拥有自己的<code class=\"language-text\">&amp;:hover</code>和<code class=\"language-text\">&amp;:active</code>，它允许伪类选择器仅作用于特定组合类的实例。虽然可以进行更深层级的嵌套，但是超出四个层级后就会变得混乱并难以管理。</p>\n<h2>子选择器中的父选择器</h2>\n<p>理解<code class=\"language-text\">&amp;</code>的力量的关键在于它在选择器声明中的位置。上面两个例子中，<code class=\"language-text\">&amp;</code>都是作为第一个字符，但是它也可以被声明在后面。在包含选择器的父项导致选择器样式发生变化的情况下，我们可以从选择器的声明块中引用父选择器。这可以通过在新的声明块中<code class=\"language-text\">&amp;</code>的前方添加父选择器来实现。所以，当我们的类<code class=\"language-text\">.feature-class</code>需要在作为<code class=\"language-text\">.parent-class</code>的子类时改变的场景下，我们可以在<code class=\"language-text\">.feature-class</code>声明块中作出改变。比如下面这个例子：</p>\n<p>Sass</p>\n<div class=\"gatsby-highlight\" data-language=\"scss\"><pre class=\"language-scss\"><code class=\"language-scss\"><span class=\"token selector\">.feature-class </span><span class=\"token punctuation\">{</span>\n    <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> #0090B2<span class=\"token punctuation\">;</span>\n    <span class=\"token selector\">.parent-class <span class=\"token parent important\">&amp;</span> </span><span class=\"token punctuation\">{</span>\n        <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> #00CEFF<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>CSS</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">.feature-class</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> #0090B2<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token selector\">.parent-class .feature-class</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> #00CEFF<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><a href=\"http://sassmeister.com/gist/1b2a288ee3fac6a0d758\">See this example on Sassmeister.</a></p>\n<p>当我们在<code class=\"language-text\">&lt;html&gt;</code>标签上有条件类时，这个特性将非常有用。比如对于IE浏览器，我们可以简单地在声明块中添加一个<code class=\"language-text\">.lt-ie9 &amp;</code>，即可添加任何针对IE8或更低版本的样式。</p>\n<h2>同胞（Siblings）</h2>\n<p>我最喜欢的使用<code class=\"language-text\">&amp;</code>的方式是相邻同胞选择器（adjacent sibling selectors）。只要当有一个选择器需要更改，且它相邻另一个选择器时，就会出现这种类型的选择器。通常，我使用相邻同胞选择器修改相同选择器在HTML中并列排布的布局，比如段落（paragraphs）或列表项目（list items）。下面的例子，我们将设置<code class=\"language-text\">&lt;p&gt;</code>没有外边距（margin），但是当其相邻一个<code class=\"language-text\">&lt;p&gt;</code>时则添加边距。</p>\n<p>Sass</p>\n<div class=\"gatsby-highlight\" data-language=\"scss\"><pre class=\"language-scss\"><code class=\"language-scss\"><span class=\"token selector\">p </span><span class=\"token punctuation\">{</span>\n    <span class=\"token property\">margin</span><span class=\"token punctuation\">:</span> 0<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">line-height</span><span class=\"token punctuation\">:</span> 1.5em<span class=\"token punctuation\">;</span>\n    <span class=\"token selector\"><span class=\"token parent important\">&amp;</span> + <span class=\"token parent important\">&amp;</span> </span><span class=\"token punctuation\">{</span>\n        <span class=\"token property\">margin-top</span><span class=\"token punctuation\">:</span> 1em<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>CSS</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">p</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">margin</span><span class=\"token punctuation\">:</span> 0<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">line-height</span><span class=\"token punctuation\">:</span> 1.5em<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token selector\">p + p</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">margin-top</span><span class=\"token punctuation\">:</span> 1em<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><a href=\"http://sassmeister.com/gist/b1ea527be946094462a5\">See this example on Sassmeister.</a></p>\n<p>当然，这不局限于相同元素。或许你不想在一个<code class=\"language-text\">&lt;h1&gt;</code>后添加外边距，除非之后紧挨着<code class=\"language-text\">&lt;h2&gt;</code>。</p>\n<p>Sass</p>\n<div class=\"gatsby-highlight\" data-language=\"scss\"><pre class=\"language-scss\"><code class=\"language-scss\"><span class=\"token selector\">h1, h2, h3 </span><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">margin</span><span class=\"token punctuation\">:</span> 0<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">h1 </span><span class=\"token punctuation\">{</span>\n  <span class=\"token selector\"><span class=\"token parent important\">&amp;</span> + h2 </span><span class=\"token punctuation\">{</span>\n    <span class=\"token property\">margin-top</span><span class=\"token punctuation\">:</span> 1em<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>CSS</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">h1, h2, h3</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">margin</span><span class=\"token punctuation\">:</span> 0<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">h1 + h2</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">margin-top</span><span class=\"token punctuation\">:</span> 1em<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><a href=\"http://sassmeister.com/gist/22d0c99b50d349ac1821\">See this example on Sassmeister.</a></p>\n<p>同样地，通用同胞和子组合选择器都可以通过用<code class=\"language-text\">+</code>、<code class=\"language-text\">~</code>和<code class=\"language-text\">&gt;</code>分别替换<code class=\"language-text\">+</code>来为声明块编写适当的样式。</p>\n<h2>总结</h2>\n<p>明确地，我们仅仅讨论了Sass中<code class=\"language-text\">&amp;</code>的力量。混合使用上面讨论过的不同形式的组合，可以实现更多的效果。你可能会遇到这样的情况：你需要定位选择器的同胞，但仅当它有特定父元素时（e.g. <code class=\"language-text\">.parent-class &amp; + .sibling-class</code>)。At that point, you can take <code class=\"language-text\">&amp;</code> to the next level by using it with mixins and extend to make wonderfully usable code — sky’s the limit.So dream big, but not too big.</p>\n<p>（完）</p>","frontmatter":{"title":"如何利用`&`来简化你的Sass","date":"May 19, 2018"}}},"pageContext":{"slug":"/use-ampersands-to-simplify-your-sass/","previous":{"fields":{"slug":"/what-css-display-properties-do-to-table-semantics/"},"frontmatter":{"title":"小记: 关于CSS display 属性对表格语义的影响"}},"next":{"fields":{"slug":"/sharing-data-between-angular-components/"},"frontmatter":{"title":"Angular组件共享数据的四种方法"}}}}