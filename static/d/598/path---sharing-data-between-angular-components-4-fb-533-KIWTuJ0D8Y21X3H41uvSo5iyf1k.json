{"data":{"site":{"siteMetadata":{"title":"Magpie","author":"Dan Geng"}},"markdownRemark":{"id":"bb895727-2acb-5361-bca5-b61d108b8621","excerpt":"Sharing Data Between Angular Components - Four Methods Arp 30, 2017 by Jeff Delaney 在深入您的第一个Anguar项目前，需要理解一个重要的概念 — 数据共享。在这节课程里，我将提供四种用于Angular…","html":"<blockquote>\n<p><a href=\"https://angularfirebase.com/lessons/sharing-data-between-angular-components-four-methods/\">Sharing Data Between Angular Components - Four Methods</a></p>\n<p>Arp 30, 2017 by Jeff Delaney</p>\n</blockquote>\n<p>在深入您的第一个Anguar项目前，需要理解一个重要的概念 — 数据共享。在这节课程里，我将提供四种用于Angular组件之间共享数据的方法。</p>\n<p><img src=\"https://user-images.githubusercontent.com/30484000/40373721-193a9e7e-5e1a-11e8-8033-67563c98ebbc.png\" alt=\"parent-child-sibling-angular-components-1024x598\"></p>\n<p>我们Angular app的<em>父-子-同胞</em>结构。</p>\n<h2>父组件至子组件：通过<code class=\"language-text\">Input()</code>共享数据</h2>\n<p>这可能是共享数据的方法中最常见和最直接的。它通过使用<code class=\"language-text\">Input()</code>装饰器（decorator）以使数据能够通过模版（template）传递。</p>\n<p># parent.component.ts</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Component <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@angular/core'</span><span class=\"token punctuation\">;</span>\n\n@<span class=\"token function\">Component</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    selector<span class=\"token punctuation\">:</span> <span class=\"token string\">'app-parent'</span><span class=\"token punctuation\">,</span>\n    template<span class=\"token punctuation\">:</span> <span class=\"token template-string\"><span class=\"token string\">`\n    \t&lt;app-child [childMessage]=\"parentMessage\">&lt;/app-child>\n    `</span></span><span class=\"token punctuation\">,</span>\n    styleUrls<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'./parent.component.css'</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ParentComponent</span> <span class=\"token punctuation\">{</span>\n    parentMessage <span class=\"token operator\">=</span> <span class=\"token string\">'message from parent'</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p># child.component.ts</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Component<span class=\"token punctuation\">,</span> Input <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@angular/core'</span><span class=\"token punctuation\">;</span>\n\n@<span class=\"token function\">Component</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    selector<span class=\"token punctuation\">:</span> <span class=\"token string\">'app-child'</span><span class=\"token punctuation\">,</span>\n    template<span class=\"token punctuation\">:</span> <span class=\"token template-string\"><span class=\"token string\">`\n    \tSay {{message}}\n    `</span></span><span class=\"token punctuation\">,</span>\n    StyleUrls<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'./child.component.css'</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ChildComponent</span> <span class=\"token punctuation\">{</span>\n    @<span class=\"token function\">Input</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> childMessage<span class=\"token punctuation\">:</span> string<span class=\"token punctuation\">;</span>\n    \n    <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2>子组件至父组件：通过<code class=\"language-text\">ViewChild()</code>共享数据</h2>\n<p><code class=\"language-text\">ViewChild</code>允许一个组件注入到另外一个组件中，父组件可以访问子组件的属性和功能。但是需要注意⚠️，子组件在视图初始化之后才可用。这意味着我们需要实现<code class=\"language-text\">AfterViewInit</code>生命周期钩子以接收子组件的数据。</p>\n<p># parent.component.ts</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Component<span class=\"token punctuation\">,</span> ViewChild<span class=\"token punctuation\">,</span> AfterViewInit <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@angular/core'</span><span class=\"token punctuation\">;</span>\n\n@<span class=\"token function\">Component</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    selector<span class=\"token punctuation\">:</span> <span class=\"token string\">'app-parent'</span><span class=\"token punctuation\">,</span>\n    template<span class=\"token punctuation\">:</span> <span class=\"token template-string\"><span class=\"token string\">`\n    \tMessage: {{message}}\n    \t&lt;app-child>&lt;/app-child>\n    `</span></span><span class=\"token punctuation\">,</span>\n    styleUrls<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'./parent.component.css'</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ParentComponent</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">AfterViewInit</span> <span class=\"token punctuation\">{</span>\n    @<span class=\"token function\">ViewChild</span><span class=\"token punctuation\">(</span>ChildComponent<span class=\"token punctuation\">)</span> child<span class=\"token punctuation\">;</span>\n    \n    <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n    \n    message<span class=\"token punctuation\">:</span> string<span class=\"token punctuation\">;</span>\n    \n    <span class=\"token function\">ngAfterViewInit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>message <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>child<span class=\"token punctuation\">.</span>message<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p># child.component.ts</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Component <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@angular/core'</span><span class=\"token punctuation\">;</span>\n\n@<span class=\"token function\">Component</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    \n    message<span class=\"token punctuation\">:</span> string <span class=\"token operator\">=</span> <span class=\"token string\">'Hola Mundo'</span><span class=\"token punctuation\">;</span>\n    \n    <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h2>子组件至父组件： 通过<code class=\"language-text\">Output()</code>和<code class=\"language-text\">EventEmitter</code>共享数据</h2>\n<p>另外一个共享数据的方法是从子组件发出（emit）数据，which can be listed to by the parent.当您想要分享如按钮点击、表单事件和其他用户事件等发生的数据更改时，此方法非常理想。</p>\n<p>在父组件中，我们创建一个方法去接收信息并将其设置与<code class=\"language-text\">message</code>变量相等。</p>\n<p>在子组件中，我们使用<code class=\"language-text\">Output</code>修饰符声明一个<code class=\"language-text\">messageEvent</code>变量并将其设置为一个新的事件发生器（event emitter）。然后我们创建一个名为<code class=\"language-text\">sendMessage</code>的函数，该函数调用在此事件上的emit方法发送我们想要传递的信息。最后，我们创建一个按钮用来触发这个函数。</p>\n<p>此时父组件可以订阅这个由子组件发出的<code class=\"language-text\">messageEvent</code>事件，然后在该事件发生时运行消息接收函数。</p>\n<p># parent.component.ts</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Component <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@angular/core'</span><span class=\"token punctuation\">;</span>\n\n@<span class=\"token function\">Component</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    selector<span class=\"token punctuation\">:</span> <span class=\"token string\">'app-parent'</span><span class=\"token punctuation\">,</span>\n    tempate<span class=\"token punctuation\">:</span> <span class=\"token template-string\"><span class=\"token string\">`\n    \tMessage: {{message}}\n    \t&lt;app-child (messageEvent)=\"receiveMessage($event)\">&lt;/app-child>\n    `</span></span><span class=\"token punctuation\">,</span>\n    styleUrls<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'./parent.component.css'</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ParentComponent</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n    \n    message<span class=\"token punctuation\">:</span> string<span class=\"token punctuation\">;</span>\n    \n    <span class=\"token function\">receiveMessage</span><span class=\"token punctuation\">(</span>$event<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>message <span class=\"token operator\">=</span> $event<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p># child.component.ts</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Component<span class=\"token punctuation\">,</span> Output<span class=\"token punctuation\">,</span> EventEmitter <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@angular/core'</span><span class=\"token punctuation\">;</span>\n\n@<span class=\"token function\">Component</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    selector<span class=\"token punctuation\">:</span> <span class=\"token string\">'app-child'</span><span class=\"token punctuation\">,</span>\n    template<span class=\"token punctuation\">:</span> <span class=\"token template-string\"><span class=\"token string\">`\n    \t&lt;button (click)=\"sendMessage()\"Send Message&lt;/button>\n    `</span></span><span class=\"token punctuation\">,</span>\n    styleUrls<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'./child.component.css'</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ChildComponent</span> <span class=\"token punctuation\">{</span>\n    message<span class=\"token punctuation\">:</span> string <span class=\"token operator\">=</span> <span class=\"token string\">'Hola Mundo'</span><span class=\"token punctuation\">;</span>\n    \n    @<span class=\"token function\">Output</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> messageEvent <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">EventEmitter</span><span class=\"token operator\">&lt;</span>string<span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    \n    <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n    \n    <span class=\"token function\">sendMessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>messageEvent<span class=\"token punctuation\">.</span><span class=\"token function\">emit</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>message<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2>不相关组件：通过Service共享数据</h2>\n<p>当需要在两个没有直接联系的组件（如同胞组件，孙辈组件等）间传递数据时，您应该提供一个共享服务。当您的数据需要时刻保持同步时，我发现 <a href=\"https://xgrommx.github.io/rx-book/content/subjects/behavior_subject/index.html\">RxJS BehaviorSubject</a> 在这种场景非常好用。</p>\n<p>你也可以使用一般的RxJS Subject提供服务共享数据，但我更倾向于使用BehaviorSubject的原因是：</p>\n<ul>\n<li>它将时刻返回订阅的当前值 - 所以没必要去调用<code class=\"language-text\">onnext</code></li>\n<li>它有一个<code class=\"language-text\">getValue()</code>方法用来提取最新值作为原始数据（raw data）</li>\n<li>它能确保组件时刻接收最新的数据</li>\n</ul>\n<p>在服务中，我们创建一个私有BehaviorSubject来保存消息的当前值。我们定义一个<code class=\"language-text\">currentMessage</code>变量来处理这个数据流，作为一个被组件使用的可观察对象。最后，我们在BehaviorSubject上创建一个函数调用next方法来改变它的值。</p>\n<p>父组件、子组件和同胞组件都会有相同的接收。我们在constructor中注入DataService，然后订阅<code class=\"language-text\">currentMessage</code>可观察对象并将其值设置为与<code class=\"language-text\">message</code>变量相等。</p>\n<p>现在，我们在这些组件中的任一组件中创建一个函数用来改变<code class=\"language-text\">message</code>的值，当这个函数执行时，新的数据会自动传播到其他所有的组件中。</p>\n<p># data.service.ts</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Injectable <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@angular/core'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> BehaviorSubject <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'rxjs/BehaviorSubject'</span><span class=\"token punctuation\">;</span>\n\n@<span class=\"token function\">Injectable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">DataService</span> <span class=\"token punctuation\">{</span>\n    \n    <span class=\"token keyword\">private</span> messageSource <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">BehaviorSubject</span><span class=\"token operator\">&lt;</span>string<span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token string\">'default message'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    currentMessage <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>messageSource<span class=\"token punctuation\">.</span><span class=\"token function\">asObservable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    \n    <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n    \n    <span class=\"token function\">changeMessage</span><span class=\"token punctuation\">(</span>message<span class=\"token punctuation\">:</span> string<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>messageSource<span class=\"token punctuation\">.</span><span class=\"token function\">next</span><span class=\"token punctuation\">(</span>message<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p># parent.component.ts</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Component<span class=\"token punctuation\">,</span> OnInit <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@angular/core'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> DataService <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'../data.service'</span><span class=\"token punctuation\">;</span>\n\n@<span class=\"token function\">Component</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    selector<span class=\"token punctuation\">:</span> <span class=\"token string\">'app-parent'</span><span class=\"token punctuation\">,</span>\n    tempate<span class=\"token punctuation\">:</span> <span class=\"token template-string\"><span class=\"token string\">`\n\t\t{{message}}\n\t`</span></span><span class=\"token punctuation\">,</span>\n\tstyleUrls<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'./siblings.component.css'</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ParentComponent</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">OnInit</span> <span class=\"token punctuation\">{</span>\n    message<span class=\"token punctuation\">:</span> string<span class=\"token punctuation\">;</span>\n    \n    <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">private</span> data<span class=\"token punctuation\">:</span> DataService<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n    \n    <span class=\"token function\">ngOnInit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>currentMessage<span class=\"token punctuation\">.</span><span class=\"token function\">subscribe</span><span class=\"token punctuation\">(</span>message <span class=\"token operator\">=></span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>message <span class=\"token operator\">=</span> message<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p># sibling.component.ts</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Component<span class=\"token punctuation\">,</span> OnInit <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@angular/core'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> DataService <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'../data.service'</span><span class=\"token punctuation\">;</span>\n\n@<span class=\"token function\">Component</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    selector<span class=\"token punctuation\">:</span> <span class=\"token string\">'app-sibling'</span><span class=\"token punctuation\">,</span>\n    template<span class=\"token punctuation\">:</span> <span class=\"token template-string\"><span class=\"token string\">`\n    \t{{message}}\n    \t&lt;button (click)=\"newMessage()\">New Message&lt;/button>\n    `</span></span><span class=\"token punctuation\">,</span>\n    styleUrls<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'./sibling.component.css'</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">SiblingComponent</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">OnInit</span> <span class=\"token punctuation\">{</span>\n\tmessage<span class=\"token punctuation\">:</span> string<span class=\"token punctuation\">;</span>\n\t\n\t<span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">private</span> data<span class=\"token punctuation\">:</span> DataService<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n\t\n\t<span class=\"token function\">ngOnInit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>currentMessage<span class=\"token punctuation\">.</span><span class=\"token function\">subscribe</span><span class=\"token punctuation\">(</span>message <span class=\"token operator\">=></span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>message <span class=\"token operator\">=</span> message<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t\n\t<span class=\"token function\">newMessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span><span class=\"token function\">changeMessage</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Hello from Sibling'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>（完）</p>","frontmatter":{"title":"Angular组件共享数据的四种方法","date":"May 25, 2018"}}},"pageContext":{"slug":"/sharing-data-between-angular-components/","previous":{"fields":{"slug":"/use-ampersands-to-simplify-your-sass/"},"frontmatter":{"title":"如何利用`&`来简化你的Sass"}},"next":null}}